<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN" "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<!--/*
 * Framework Generated Hibernate Config hbm Source
 * - HP_TAX_SCALE_DATA - 
 */-->
<hibernate-mapping>
	<class name="project.conf.resource.ormapper.dto.oracle.HpTaxScaleData" table="HP_TAX_SCALE_DATA" lazy="false">
		<meta attribute="class-description" inherit="false"></meta>

		<id name="taxScaleDataId" column="TAX_SCALE_DATA_ID" type="java.lang.Double"></id>

		<property name="coeffA" column="COEFF_A" type="java.lang.Double"/>
		<property name="coeffB" column="COEFF_B" type="java.lang.Double"/>
		<property name="createdBy" column="CREATED_BY" type="java.lang.Double"/>
		<property name="creationDate" column="CREATION_DATE" type="java.util.Date"/>
		<property name="lastUpdatedBy" column="LAST_UPDATED_BY" type="java.lang.Double"/>
		<property name="lastUpdateDate" column="LAST_UPDATE_DATE" type="java.util.Date"/>
		<property name="taxScaleId" column="TAX_SCALE_ID" type="java.lang.Double"/>
		<property name="wkEarnLessThan" column="WK_EARN_LESS_THAN" type="java.lang.Double"/>
	</class>

	<sql-query name="hpTaxScaleData.selectAll">
	<![CDATA[
		SELECT TAX_SCALE_DATA_ID,
		       COEFF_A,
		       COEFF_B,
		       CREATED_BY,
		       TO_CHAR(CREATION_DATE, 'yyyymmddhh24miss') AS CREATION_DATE,
		       LAST_UPDATED_BY,
		       TO_CHAR(LAST_UPDATE_DATE, 'yyyymmddhh24miss') AS LAST_UPDATE_DATE,
		       TAX_SCALE_ID,
		       WK_EARN_LESS_THAN
		  FROM HP_TAX_SCALE_DATA
		 WHERE 1 = 1
		 ${auto_fill}
		 ${frameworkGeneratedWhere}
		 ${frameworkGeneratedOrderBy}
	]]>
	</sql-query>

	<sql-query name="hpTaxScaleData.insert">
	<![CDATA[
		INSERT INTO HP_TAX_SCALE_DATA (
		       TAX_SCALE_DATA_ID,
		       COEFF_A,
		       COEFF_B,
		       CREATED_BY,
		       CREATION_DATE,
		       LAST_UPDATED_BY,
		       LAST_UPDATE_DATE,
		       TAX_SCALE_ID,
		       WK_EARN_LESS_THAN
		       )
		VALUES (
		       ${TAX_SCALE_DATA_ID},
		       ${COEFF_A},
		       ${COEFF_B},
		       ${CREATED_BY},
		       ${CREATION_DATE},
		       ${LAST_UPDATED_BY},
		       ${LAST_UPDATE_DATE},
		       ${TAX_SCALE_ID},
		       ${WK_EARN_LESS_THAN}
		       )
	]]>
	</sql-query>

	<sql-query name="hpTaxScaleData.update">
	<![CDATA[
		UPDATE HP_TAX_SCALE_DATA
		   SET COEFF_A = ${COEFF_A},
		       COEFF_B = ${COEFF_B},
		       CREATED_BY = ${CREATED_BY},
		       CREATION_DATE = ${CREATION_DATE},
		       LAST_UPDATED_BY = ${LAST_UPDATED_BY},
		       LAST_UPDATE_DATE = ${LAST_UPDATE_DATE},
		       TAX_SCALE_ID = ${TAX_SCALE_ID},
		       WK_EARN_LESS_THAN = ${WK_EARN_LESS_THAN}
		 WHERE 1 = 1
		   ${frameworkGeneratedWhere}
	]]>
	</sql-query>

	<sql-query name="hpTaxScaleData.updateColumns">
	<![CDATA[
		UPDATE HP_TAX_SCALE_DATA
		   SET ${frameworkGeneratedColumnsToUpdate}
		 WHERE 1 = 1
		 ${frameworkGeneratedWhere}
	]]>
	</sql-query>

	<sql-query name="hpTaxScaleData.delete">
	<![CDATA[
		DELETE HP_TAX_SCALE_DATA
		 WHERE 1 = 1
		   ${frameworkGeneratedWhere}
	]]>
	</sql-query>
</hibernate-mapping>