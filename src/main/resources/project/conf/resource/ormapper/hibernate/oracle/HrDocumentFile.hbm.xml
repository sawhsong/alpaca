<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN" "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<!--/*
 * Framework Generated Hibernate Config hbm Source
 * - HR_DOCUMENT_FILE - 
 */-->
<hibernate-mapping>
	<class name="project.conf.resource.ormapper.dto.oracle.HrDocumentFile" table="HR_DOCUMENT_FILE" lazy="false">
		<meta attribute="class-description" inherit="false"></meta>

		<id name="documentFileId" column="DOCUMENT_FILE_ID" type="java.lang.Double"></id>

		<property name="documentFile" column="DOCUMENT_FILE" not-null="true" type="java.lang.String" length="4000"/>
		<property name="documentId" column="DOCUMENT_ID" not-null="true" type="java.lang.Double"/>
		<property name="fileName" column="FILE_NAME" type="java.lang.String" length="500"/>
		<property name="partNumber" column="PART_NUMBER" type="java.lang.Double"/>
	</class>

	<sql-query name="hrDocumentFile.selectAll">
	<![CDATA[
		SELECT DOCUMENT_FILE_ID,
		       DOCUMENT_FILE,
		       DOCUMENT_ID,
		       FILE_NAME,
		       PART_NUMBER
		  FROM HR_DOCUMENT_FILE
		 WHERE 1 = 1
		 ${auto_fill}
		 ${frameworkGeneratedWhere}
		 ${frameworkGeneratedOrderBy}
	]]>
	</sql-query>

	<sql-query name="hrDocumentFile.insert">
	<![CDATA[
		INSERT INTO HR_DOCUMENT_FILE (
		       DOCUMENT_FILE_ID,
		       DOCUMENT_FILE,
		       DOCUMENT_ID,
		       FILE_NAME,
		       PART_NUMBER
		       )
		VALUES (
		       ${DOCUMENT_FILE_ID},
		       ${DOCUMENT_FILE},
		       ${DOCUMENT_ID},
		       ${FILE_NAME},
		       ${PART_NUMBER}
		       )
	]]>
	</sql-query>

	<sql-query name="hrDocumentFile.update">
	<![CDATA[
		UPDATE HR_DOCUMENT_FILE
		   SET DOCUMENT_FILE = ${DOCUMENT_FILE},
		       DOCUMENT_ID = ${DOCUMENT_ID},
		       FILE_NAME = ${FILE_NAME},
		       PART_NUMBER = ${PART_NUMBER}
		 WHERE 1 = 1
		   ${frameworkGeneratedWhere}
	]]>
	</sql-query>

	<sql-query name="hrDocumentFile.updateColumns">
	<![CDATA[
		UPDATE HR_DOCUMENT_FILE
		   SET ${frameworkGeneratedColumnsToUpdate}
		 WHERE 1 = 1
		 ${frameworkGeneratedWhere}
	]]>
	</sql-query>

	<sql-query name="hrDocumentFile.delete">
	<![CDATA[
		DELETE HR_DOCUMENT_FILE
		 WHERE 1 = 1
		   ${frameworkGeneratedWhere}
	]]>
	</sql-query>
</hibernate-mapping>