<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN" "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<!--/*
 * Framework Generated Hibernate Config hbm Source
 * - PORTAL_PAYSLIPS - 
 */-->
<hibernate-mapping>
	<class name="project.conf.resource.ormapper.dto.oracle.PortalPayslips" table="PORTAL_PAYSLIPS" lazy="false">
		<meta attribute="class-description" inherit="false"></meta>

		<id name="payslipId" column="PAYSLIP_ID" type="java.lang.Double"></id>

		<property name="createdBy" column="CREATED_BY" not-null="true" type="java.lang.Double"/>
		<property name="creationDate" column="CREATION_DATE" not-null="true" type="java.util.Date"/>
		<property name="lastUpdatedBy" column="LAST_UPDATED_BY" not-null="true" type="java.lang.Double"/>
		<property name="lastUpdateDate" column="LAST_UPDATE_DATE" not-null="true" type="java.util.Date"/>
		<property name="netAmount" column="NET_AMOUNT" not-null="true" type="java.lang.Double"/>
		<property name="payslipContent" column="PAYSLIP_CONTENT" not-null="true" type="java.lang.String" length="4000"/>
		<property name="payslipDate" column="PAYSLIP_DATE" not-null="true" type="java.util.Date"/>
		<property name="periodFromDate" column="PERIOD_FROM_DATE" not-null="true" type="java.util.Date"/>
		<property name="periodToDate" column="PERIOD_TO_DATE" not-null="true" type="java.util.Date"/>
		<property name="personNumber" column="PERSON_NUMBER" not-null="true" type="java.lang.Double"/>
		<property name="paymentId" column="PAYMENT_ID" type="java.lang.Double"/>
		<property name="payslipDescription" column="PAYSLIP_DESCRIPTION" type="java.lang.String" length="100"/>
		<property name="viewed" column="VIEWED" type="java.lang.String" length="1"/>
	</class>

	<sql-query name="portalPayslips.selectAll">
	<![CDATA[
		SELECT PAYSLIP_ID,
		       CREATED_BY,
		       TO_CHAR(CREATION_DATE, 'yyyymmddhh24miss') AS CREATION_DATE,
		       LAST_UPDATED_BY,
		       TO_CHAR(LAST_UPDATE_DATE, 'yyyymmddhh24miss') AS LAST_UPDATE_DATE,
		       NET_AMOUNT,
		       PAYSLIP_CONTENT,
		       TO_CHAR(PAYSLIP_DATE, 'yyyymmddhh24miss') AS PAYSLIP_DATE,
		       TO_CHAR(PERIOD_FROM_DATE, 'yyyymmddhh24miss') AS PERIOD_FROM_DATE,
		       TO_CHAR(PERIOD_TO_DATE, 'yyyymmddhh24miss') AS PERIOD_TO_DATE,
		       PERSON_NUMBER,
		       PAYMENT_ID,
		       PAYSLIP_DESCRIPTION,
		       VIEWED
		  FROM PORTAL_PAYSLIPS
		 WHERE 1 = 1
		 ${auto_fill}
		 ${frameworkGeneratedWhere}
		 ${frameworkGeneratedOrderBy}
	]]>
	</sql-query>

	<sql-query name="portalPayslips.insert">
	<![CDATA[
		INSERT INTO PORTAL_PAYSLIPS (
		       PAYSLIP_ID,
		       CREATED_BY,
		       CREATION_DATE,
		       LAST_UPDATED_BY,
		       LAST_UPDATE_DATE,
		       NET_AMOUNT,
		       PAYSLIP_CONTENT,
		       PAYSLIP_DATE,
		       PERIOD_FROM_DATE,
		       PERIOD_TO_DATE,
		       PERSON_NUMBER,
		       PAYMENT_ID,
		       PAYSLIP_DESCRIPTION,
		       VIEWED
		       )
		VALUES (
		       ${PAYSLIP_ID},
		       ${CREATED_BY},
		       ${CREATION_DATE},
		       ${LAST_UPDATED_BY},
		       ${LAST_UPDATE_DATE},
		       ${NET_AMOUNT},
		       ${PAYSLIP_CONTENT},
		       ${PAYSLIP_DATE},
		       ${PERIOD_FROM_DATE},
		       ${PERIOD_TO_DATE},
		       ${PERSON_NUMBER},
		       ${PAYMENT_ID},
		       ${PAYSLIP_DESCRIPTION},
		       ${VIEWED}
		       )
	]]>
	</sql-query>

	<sql-query name="portalPayslips.update">
	<![CDATA[
		UPDATE PORTAL_PAYSLIPS
		   SET CREATED_BY = ${CREATED_BY},
		       CREATION_DATE = ${CREATION_DATE},
		       LAST_UPDATED_BY = ${LAST_UPDATED_BY},
		       LAST_UPDATE_DATE = ${LAST_UPDATE_DATE},
		       NET_AMOUNT = ${NET_AMOUNT},
		       PAYSLIP_CONTENT = ${PAYSLIP_CONTENT},
		       PAYSLIP_DATE = ${PAYSLIP_DATE},
		       PERIOD_FROM_DATE = ${PERIOD_FROM_DATE},
		       PERIOD_TO_DATE = ${PERIOD_TO_DATE},
		       PERSON_NUMBER = ${PERSON_NUMBER},
		       PAYMENT_ID = ${PAYMENT_ID},
		       PAYSLIP_DESCRIPTION = ${PAYSLIP_DESCRIPTION},
		       VIEWED = ${VIEWED}
		 WHERE 1 = 1
		   ${frameworkGeneratedWhere}
	]]>
	</sql-query>

	<sql-query name="portalPayslips.updateColumns">
	<![CDATA[
		UPDATE PORTAL_PAYSLIPS
		   SET ${frameworkGeneratedColumnsToUpdate}
		 WHERE 1 = 1
		 ${frameworkGeneratedWhere}
	]]>
	</sql-query>

	<sql-query name="portalPayslips.delete">
	<![CDATA[
		DELETE PORTAL_PAYSLIPS
		 WHERE 1 = 1
		   ${frameworkGeneratedWhere}
	]]>
	</sql-query>
</hibernate-mapping>