<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN" "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<!--/*
 * Framework Generated Hibernate Config hbm Source
 * - OUTBOUND_DOCUMENT - 
 */-->
<hibernate-mapping>
	<class name="project.conf.resource.ormapper.dto.oracle.OutboundDocument" table="OUTBOUND_DOCUMENT" lazy="false">
		<meta attribute="class-description" inherit="false"></meta>

		<id name="outboundDocumentId" column="OUTBOUND_DOCUMENT_ID" type="java.lang.Double"></id>

		<property name="createdBy" column="CREATED_BY" not-null="true" type="java.lang.Double"/>
		<property name="status" column="STATUS" not-null="true" type="java.lang.String" length="10"/>
		<property name="typeId" column="TYPE_ID" not-null="true" type="java.lang.Double"/>
		<property name="userId" column="USER_ID" not-null="true" type="java.lang.Double"/>
		<property name="creationDate" column="CREATION_DATE" type="java.util.Date"/>
		<property name="documentLocation" column="DOCUMENT_LOCATION" type="java.lang.String" length="255"/>
		<property name="isStoredToFilesystem" column="IS_STORED_TO_FILESYSTEM" type="java.lang.String" length="1"/>
		<property name="lastUpdatedBy" column="LAST_UPDATED_BY" type="java.lang.Double"/>
		<property name="lastUpdateDate" column="LAST_UPDATE_DATE" type="java.util.Date"/>
		<property name="source" column="SOURCE" type="java.lang.String" length="250"/>
		<property name="sourceId" column="SOURCE_ID" type="java.lang.Double"/>
		<property name="templateId" column="TEMPLATE_ID" type="java.lang.Double"/>
	</class>

	<sql-query name="outboundDocument.selectAll">
	<![CDATA[
		SELECT OUTBOUND_DOCUMENT_ID,
		       CREATED_BY,
		       STATUS,
		       TYPE_ID,
		       USER_ID,
		       TO_CHAR(CREATION_DATE, 'yyyymmddhh24miss') AS CREATION_DATE,
		       DOCUMENT_LOCATION,
		       IS_STORED_TO_FILESYSTEM,
		       LAST_UPDATED_BY,
		       TO_CHAR(LAST_UPDATE_DATE, 'yyyymmddhh24miss') AS LAST_UPDATE_DATE,
		       SOURCE,
		       SOURCE_ID,
		       TEMPLATE_ID
		  FROM OUTBOUND_DOCUMENT
		 WHERE 1 = 1
		 ${auto_fill}
		 ${frameworkGeneratedWhere}
		 ${frameworkGeneratedOrderBy}
	]]>
	</sql-query>

	<sql-query name="outboundDocument.insert">
	<![CDATA[
		INSERT INTO OUTBOUND_DOCUMENT (
		       OUTBOUND_DOCUMENT_ID,
		       CREATED_BY,
		       STATUS,
		       TYPE_ID,
		       USER_ID,
		       CREATION_DATE,
		       DOCUMENT_LOCATION,
		       IS_STORED_TO_FILESYSTEM,
		       LAST_UPDATED_BY,
		       LAST_UPDATE_DATE,
		       SOURCE,
		       SOURCE_ID,
		       TEMPLATE_ID
		       )
		VALUES (
		       ${OUTBOUND_DOCUMENT_ID},
		       ${CREATED_BY},
		       ${STATUS},
		       ${TYPE_ID},
		       ${USER_ID},
		       ${CREATION_DATE},
		       ${DOCUMENT_LOCATION},
		       ${IS_STORED_TO_FILESYSTEM},
		       ${LAST_UPDATED_BY},
		       ${LAST_UPDATE_DATE},
		       ${SOURCE},
		       ${SOURCE_ID},
		       ${TEMPLATE_ID}
		       )
	]]>
	</sql-query>

	<sql-query name="outboundDocument.update">
	<![CDATA[
		UPDATE OUTBOUND_DOCUMENT
		   SET CREATED_BY = ${CREATED_BY},
		       STATUS = ${STATUS},
		       TYPE_ID = ${TYPE_ID},
		       USER_ID = ${USER_ID},
		       CREATION_DATE = ${CREATION_DATE},
		       DOCUMENT_LOCATION = ${DOCUMENT_LOCATION},
		       IS_STORED_TO_FILESYSTEM = ${IS_STORED_TO_FILESYSTEM},
		       LAST_UPDATED_BY = ${LAST_UPDATED_BY},
		       LAST_UPDATE_DATE = ${LAST_UPDATE_DATE},
		       SOURCE = ${SOURCE},
		       SOURCE_ID = ${SOURCE_ID},
		       TEMPLATE_ID = ${TEMPLATE_ID}
		 WHERE 1 = 1
		   ${frameworkGeneratedWhere}
	]]>
	</sql-query>

	<sql-query name="outboundDocument.updateColumns">
	<![CDATA[
		UPDATE OUTBOUND_DOCUMENT
		   SET ${frameworkGeneratedColumnsToUpdate}
		 WHERE 1 = 1
		 ${frameworkGeneratedWhere}
	]]>
	</sql-query>

	<sql-query name="outboundDocument.delete">
	<![CDATA[
		DELETE OUTBOUND_DOCUMENT
		 WHERE 1 = 1
		   ${frameworkGeneratedWhere}
	]]>
	</sql-query>
</hibernate-mapping>