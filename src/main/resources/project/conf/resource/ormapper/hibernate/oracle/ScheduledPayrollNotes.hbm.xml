<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN" "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<!--/*
 * Framework Generated Hibernate Config hbm Source
 * - SCHEDULED_PAYROLL_NOTES - 
 */-->
<hibernate-mapping>
	<class name="project.conf.resource.ormapper.dto.oracle.ScheduledPayrollNotes" table="SCHEDULED_PAYROLL_NOTES" lazy="false">
		<meta attribute="class-description" inherit="false"></meta>

		<id column="ROWID" type="java.lang.String"/>

		<property name="createdBy" column="CREATED_BY" not-null="true" type="java.lang.Double"/>
		<property name="creationDate" column="CREATION_DATE" not-null="true" type="java.util.Date"/>
		<property name="lastUpdatedBy" column="LAST_UPDATED_BY" not-null="true" type="java.lang.Double"/>
		<property name="lastUpdateDate" column="LAST_UPDATE_DATE" not-null="true" type="java.util.Date"/>
		<property name="notificationId" column="NOTIFICATION_ID" not-null="true" type="java.lang.Double"/>
		<property name="personId" column="PERSON_ID" not-null="true" type="java.lang.Double"/>
		<property name="endDate" column="END_DATE" type="java.util.Date"/>
		<property name="isActive" column="IS_ACTIVE" type="java.lang.String" length="1"/>
		<property name="notificationPeriod" column="NOTIFICATION_PERIOD" type="java.lang.String" length="20"/>
		<property name="notificationText" column="NOTIFICATION_TEXT" type="java.lang.String" length="4000"/>
		<property name="notificationType" column="NOTIFICATION_TYPE" type="java.lang.String" length="20"/>
		<property name="startDate" column="START_DATE" type="java.util.Date"/>
	</class>

	<sql-query name="scheduledPayrollNotes.selectAll">
	<![CDATA[
		SELECT CREATED_BY,
		       TO_CHAR(CREATION_DATE, 'yyyymmddhh24miss') AS CREATION_DATE,
		       LAST_UPDATED_BY,
		       TO_CHAR(LAST_UPDATE_DATE, 'yyyymmddhh24miss') AS LAST_UPDATE_DATE,
		       NOTIFICATION_ID,
		       PERSON_ID,
		       TO_CHAR(END_DATE, 'yyyymmddhh24miss') AS END_DATE,
		       IS_ACTIVE,
		       NOTIFICATION_PERIOD,
		       NOTIFICATION_TEXT,
		       NOTIFICATION_TYPE,
		       TO_CHAR(START_DATE, 'yyyymmddhh24miss') AS START_DATE
		  FROM SCHEDULED_PAYROLL_NOTES
		 WHERE 1 = 1
		 ${auto_fill}
		 ${frameworkGeneratedWhere}
		 ${frameworkGeneratedOrderBy}
	]]>
	</sql-query>

	<sql-query name="scheduledPayrollNotes.insert">
	<![CDATA[
		INSERT INTO SCHEDULED_PAYROLL_NOTES (
		       CREATED_BY,
		       CREATION_DATE,
		       LAST_UPDATED_BY,
		       LAST_UPDATE_DATE,
		       NOTIFICATION_ID,
		       PERSON_ID,
		       END_DATE,
		       IS_ACTIVE,
		       NOTIFICATION_PERIOD,
		       NOTIFICATION_TEXT,
		       NOTIFICATION_TYPE,
		       START_DATE
		       )
		VALUES (
		       ${CREATED_BY},
		       ${CREATION_DATE},
		       ${LAST_UPDATED_BY},
		       ${LAST_UPDATE_DATE},
		       ${NOTIFICATION_ID},
		       ${PERSON_ID},
		       ${END_DATE},
		       ${IS_ACTIVE},
		       ${NOTIFICATION_PERIOD},
		       ${NOTIFICATION_TEXT},
		       ${NOTIFICATION_TYPE},
		       ${START_DATE}
		       )
	]]>
	</sql-query>

	<sql-query name="scheduledPayrollNotes.update">
	<![CDATA[
		UPDATE SCHEDULED_PAYROLL_NOTES
		   SET CREATED_BY = ${CREATED_BY},
		       CREATION_DATE = ${CREATION_DATE},
		       LAST_UPDATED_BY = ${LAST_UPDATED_BY},
		       LAST_UPDATE_DATE = ${LAST_UPDATE_DATE},
		       NOTIFICATION_ID = ${NOTIFICATION_ID},
		       PERSON_ID = ${PERSON_ID},
		       END_DATE = ${END_DATE},
		       IS_ACTIVE = ${IS_ACTIVE},
		       NOTIFICATION_PERIOD = ${NOTIFICATION_PERIOD},
		       NOTIFICATION_TEXT = ${NOTIFICATION_TEXT},
		       NOTIFICATION_TYPE = ${NOTIFICATION_TYPE},
		       START_DATE = ${START_DATE}
		 WHERE 1 = 1
		   ${frameworkGeneratedWhere}
	]]>
	</sql-query>

	<sql-query name="scheduledPayrollNotes.updateColumns">
	<![CDATA[
		UPDATE SCHEDULED_PAYROLL_NOTES
		   SET ${frameworkGeneratedColumnsToUpdate}
		 WHERE 1 = 1
		 ${frameworkGeneratedWhere}
	]]>
	</sql-query>

	<sql-query name="scheduledPayrollNotes.delete">
	<![CDATA[
		DELETE SCHEDULED_PAYROLL_NOTES
		 WHERE 1 = 1
		   ${frameworkGeneratedWhere}
	]]>
	</sql-query>
</hibernate-mapping>