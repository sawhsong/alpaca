<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN" "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<!--/*
 * Framework Generated Hibernate Config hbm Source
 * - TIMEPRO_IMPORT - 
 */-->
<hibernate-mapping>
	<class name="project.conf.resource.ormapper.dto.oracle.TimeproImport" table="TIMEPRO_IMPORT" lazy="false">
		<meta attribute="class-description" inherit="false"></meta>

		<id name="importId" column="IMPORT_ID" type="java.lang.Double"></id>

		<property name="loginId" column="LOGIN_ID" not-null="true" type="java.lang.Double"/>
		<property name="role" column="ROLE" not-null="true" type="java.lang.String" length="255"/>
		<property name="authManager" column="AUTH_MANAGER" type="java.lang.String" length="170"/>
		<property name="authManagerEmail" column="AUTH_MANAGER_EMAIL" type="java.lang.String" length="255"/>
		<property name="clientInvoiceNumber" column="CLIENT_INVOICE_NUMBER" type="java.lang.String" length="20"/>
		<property name="createdBy" column="CREATED_BY" type="java.lang.Double"/>
		<property name="creationDate" column="CREATION_DATE" type="java.util.Date"/>
		<property name="customerName" column="CUSTOMER_NAME" type="java.lang.String" length="200"/>
		<property name="dateWorked" column="DATE_WORKED" type="java.util.Date"/>
		<property name="exportBatchId" column="EXPORT_BATCH_ID" type="java.lang.Double"/>
		<property name="hoursWorked" column="HOURS_WORKED" type="java.lang.Double"/>
		<property name="hoursWorkedOld" column="HOURS_WORKED_OLD" type="java.lang.Double"/>
		<property name="instance" column="INSTANCE" type="java.lang.String" length="255"/>
		<property name="lastUpdatedBy" column="LAST_UPDATED_BY" type="java.lang.Double"/>
		<property name="lastUpdateDate" column="LAST_UPDATE_DATE" type="java.util.Date"/>
		<property name="projectDescription" column="PROJECT_DESCRIPTION" type="java.lang.String" length="255"/>
		<property name="staffName" column="STAFF_NAME" type="java.lang.String" length="170"/>
		<property name="workDescription" column="WORK_DESCRIPTION" type="java.lang.String" length="255"/>
	</class>

	<sql-query name="timeproImport.selectAll">
	<![CDATA[
		SELECT IMPORT_ID,
		       LOGIN_ID,
		       ROLE,
		       AUTH_MANAGER,
		       AUTH_MANAGER_EMAIL,
		       CLIENT_INVOICE_NUMBER,
		       CREATED_BY,
		       TO_CHAR(CREATION_DATE, 'yyyymmddhh24miss') AS CREATION_DATE,
		       CUSTOMER_NAME,
		       TO_CHAR(DATE_WORKED, 'yyyymmddhh24miss') AS DATE_WORKED,
		       EXPORT_BATCH_ID,
		       HOURS_WORKED,
		       HOURS_WORKED_OLD,
		       INSTANCE,
		       LAST_UPDATED_BY,
		       TO_CHAR(LAST_UPDATE_DATE, 'yyyymmddhh24miss') AS LAST_UPDATE_DATE,
		       PROJECT_DESCRIPTION,
		       STAFF_NAME,
		       WORK_DESCRIPTION
		  FROM TIMEPRO_IMPORT
		 WHERE 1 = 1
		 ${auto_fill}
		 ${frameworkGeneratedWhere}
		 ${frameworkGeneratedOrderBy}
	]]>
	</sql-query>

	<sql-query name="timeproImport.insert">
	<![CDATA[
		INSERT INTO TIMEPRO_IMPORT (
		       IMPORT_ID,
		       LOGIN_ID,
		       ROLE,
		       AUTH_MANAGER,
		       AUTH_MANAGER_EMAIL,
		       CLIENT_INVOICE_NUMBER,
		       CREATED_BY,
		       CREATION_DATE,
		       CUSTOMER_NAME,
		       DATE_WORKED,
		       EXPORT_BATCH_ID,
		       HOURS_WORKED,
		       HOURS_WORKED_OLD,
		       INSTANCE,
		       LAST_UPDATED_BY,
		       LAST_UPDATE_DATE,
		       PROJECT_DESCRIPTION,
		       STAFF_NAME,
		       WORK_DESCRIPTION
		       )
		VALUES (
		       ${IMPORT_ID},
		       ${LOGIN_ID},
		       ${ROLE},
		       ${AUTH_MANAGER},
		       ${AUTH_MANAGER_EMAIL},
		       ${CLIENT_INVOICE_NUMBER},
		       ${CREATED_BY},
		       ${CREATION_DATE},
		       ${CUSTOMER_NAME},
		       ${DATE_WORKED},
		       ${EXPORT_BATCH_ID},
		       ${HOURS_WORKED},
		       ${HOURS_WORKED_OLD},
		       ${INSTANCE},
		       ${LAST_UPDATED_BY},
		       ${LAST_UPDATE_DATE},
		       ${PROJECT_DESCRIPTION},
		       ${STAFF_NAME},
		       ${WORK_DESCRIPTION}
		       )
	]]>
	</sql-query>

	<sql-query name="timeproImport.update">
	<![CDATA[
		UPDATE TIMEPRO_IMPORT
		   SET LOGIN_ID = ${LOGIN_ID},
		       ROLE = ${ROLE},
		       AUTH_MANAGER = ${AUTH_MANAGER},
		       AUTH_MANAGER_EMAIL = ${AUTH_MANAGER_EMAIL},
		       CLIENT_INVOICE_NUMBER = ${CLIENT_INVOICE_NUMBER},
		       CREATED_BY = ${CREATED_BY},
		       CREATION_DATE = ${CREATION_DATE},
		       CUSTOMER_NAME = ${CUSTOMER_NAME},
		       DATE_WORKED = ${DATE_WORKED},
		       EXPORT_BATCH_ID = ${EXPORT_BATCH_ID},
		       HOURS_WORKED = ${HOURS_WORKED},
		       HOURS_WORKED_OLD = ${HOURS_WORKED_OLD},
		       INSTANCE = ${INSTANCE},
		       LAST_UPDATED_BY = ${LAST_UPDATED_BY},
		       LAST_UPDATE_DATE = ${LAST_UPDATE_DATE},
		       PROJECT_DESCRIPTION = ${PROJECT_DESCRIPTION},
		       STAFF_NAME = ${STAFF_NAME},
		       WORK_DESCRIPTION = ${WORK_DESCRIPTION}
		 WHERE 1 = 1
		   ${frameworkGeneratedWhere}
	]]>
	</sql-query>

	<sql-query name="timeproImport.updateColumns">
	<![CDATA[
		UPDATE TIMEPRO_IMPORT
		   SET ${frameworkGeneratedColumnsToUpdate}
		 WHERE 1 = 1
		 ${frameworkGeneratedWhere}
	]]>
	</sql-query>

	<sql-query name="timeproImport.delete">
	<![CDATA[
		DELETE TIMEPRO_IMPORT
		 WHERE 1 = 1
		   ${frameworkGeneratedWhere}
	]]>
	</sql-query>
</hibernate-mapping>