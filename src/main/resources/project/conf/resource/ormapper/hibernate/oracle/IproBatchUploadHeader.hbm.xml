<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN" "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<!--/*
 * Framework Generated Hibernate Config hbm Source
 * - IPRO_BATCH_UPLOAD_HEADER - 
 */-->
<hibernate-mapping>
	<class name="project.conf.resource.ormapper.dto.oracle.IproBatchUploadHeader" table="IPRO_BATCH_UPLOAD_HEADER" lazy="false">
		<meta attribute="class-description" inherit="false"></meta>

		<id name="headerId" column="HEADER_ID" type="java.lang.Double"></id>

		<property name="createdBy" column="CREATED_BY" not-null="true" type="java.lang.Double"/>
		<property name="creationDate" column="CREATION_DATE" not-null="true" type="java.util.Date"/>
		<property name="lastUpdatedBy" column="LAST_UPDATED_BY" not-null="true" type="java.lang.Double"/>
		<property name="lastUpdatedDate" column="LAST_UPDATED_DATE" not-null="true" type="java.util.Date"/>
		<property name="numberOfIpro" column="NUMBER_OF_IPRO" not-null="true" type="java.lang.Double"/>
		<property name="comments" column="COMMENTS" type="java.lang.String" length="2000"/>
		<property name="customerName" column="CUSTOMER_NAME" type="java.lang.String" length="200"/>
		<property name="originalData" column="ORIGINAL_DATA" type="java.lang.String" length="4000"/>
		<property name="originalFileName" column="ORIGINAL_FILE_NAME" type="java.lang.String" length="100"/>
		<property name="transformed" column="TRANSFORMED" type="java.lang.String" length="1"/>
	</class>

	<sql-query name="iproBatchUploadHeader.selectAll">
	<![CDATA[
		SELECT HEADER_ID,
		       CREATED_BY,
		       TO_CHAR(CREATION_DATE, 'yyyymmddhh24miss') AS CREATION_DATE,
		       LAST_UPDATED_BY,
		       TO_CHAR(LAST_UPDATED_DATE, 'yyyymmddhh24miss') AS LAST_UPDATED_DATE,
		       NUMBER_OF_IPRO,
		       COMMENTS,
		       CUSTOMER_NAME,
		       ORIGINAL_DATA,
		       ORIGINAL_FILE_NAME,
		       TRANSFORMED
		  FROM IPRO_BATCH_UPLOAD_HEADER
		 WHERE 1 = 1
		 ${auto_fill}
		 ${frameworkGeneratedWhere}
		 ${frameworkGeneratedOrderBy}
	]]>
	</sql-query>

	<sql-query name="iproBatchUploadHeader.insert">
	<![CDATA[
		INSERT INTO IPRO_BATCH_UPLOAD_HEADER (
		       HEADER_ID,
		       CREATED_BY,
		       CREATION_DATE,
		       LAST_UPDATED_BY,
		       LAST_UPDATED_DATE,
		       NUMBER_OF_IPRO,
		       COMMENTS,
		       CUSTOMER_NAME,
		       ORIGINAL_DATA,
		       ORIGINAL_FILE_NAME,
		       TRANSFORMED
		       )
		VALUES (
		       ${HEADER_ID},
		       ${CREATED_BY},
		       ${CREATION_DATE},
		       ${LAST_UPDATED_BY},
		       ${LAST_UPDATED_DATE},
		       ${NUMBER_OF_IPRO},
		       ${COMMENTS},
		       ${CUSTOMER_NAME},
		       ${ORIGINAL_DATA},
		       ${ORIGINAL_FILE_NAME},
		       ${TRANSFORMED}
		       )
	]]>
	</sql-query>

	<sql-query name="iproBatchUploadHeader.update">
	<![CDATA[
		UPDATE IPRO_BATCH_UPLOAD_HEADER
		   SET CREATED_BY = ${CREATED_BY},
		       CREATION_DATE = ${CREATION_DATE},
		       LAST_UPDATED_BY = ${LAST_UPDATED_BY},
		       LAST_UPDATED_DATE = ${LAST_UPDATED_DATE},
		       NUMBER_OF_IPRO = ${NUMBER_OF_IPRO},
		       COMMENTS = ${COMMENTS},
		       CUSTOMER_NAME = ${CUSTOMER_NAME},
		       ORIGINAL_DATA = ${ORIGINAL_DATA},
		       ORIGINAL_FILE_NAME = ${ORIGINAL_FILE_NAME},
		       TRANSFORMED = ${TRANSFORMED}
		 WHERE 1 = 1
		   ${frameworkGeneratedWhere}
	]]>
	</sql-query>

	<sql-query name="iproBatchUploadHeader.updateColumns">
	<![CDATA[
		UPDATE IPRO_BATCH_UPLOAD_HEADER
		   SET ${frameworkGeneratedColumnsToUpdate}
		 WHERE 1 = 1
		 ${frameworkGeneratedWhere}
	]]>
	</sql-query>

	<sql-query name="iproBatchUploadHeader.delete">
	<![CDATA[
		DELETE IPRO_BATCH_UPLOAD_HEADER
		 WHERE 1 = 1
		   ${frameworkGeneratedWhere}
	]]>
	</sql-query>
</hibernate-mapping>