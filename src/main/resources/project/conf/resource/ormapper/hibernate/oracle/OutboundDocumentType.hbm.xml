<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN" "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<!--/*
 * Framework Generated Hibernate Config hbm Source
 * - OUTBOUND_DOCUMENT_TYPE - 
 */-->
<hibernate-mapping>
	<class name="project.conf.resource.ormapper.dto.oracle.OutboundDocumentType" table="OUTBOUND_DOCUMENT_TYPE" lazy="false">
		<meta attribute="class-description" inherit="false"></meta>

		<id column="ROWID" type="java.lang.String"/>

		<property name="createdBy" column="CREATED_BY" not-null="true" type="java.lang.Double"/>
		<property name="isActive" column="IS_ACTIVE" not-null="true" type="java.lang.String" length="1"/>
		<property name="outboundDocumentTypeId" column="OUTBOUND_DOCUMENT_TYPE_ID" not-null="true" type="java.lang.Double"/>
		<property name="type" column="TYPE" not-null="true" type="java.lang.String" length="10"/>
		<property name="createdDate" column="CREATED_DATE" type="java.util.Date"/>
		<property name="shortName" column="SHORT_NAME" type="java.lang.String" length="25"/>
		<property name="updatedBy" column="UPDATED_BY" type="java.lang.Double"/>
		<property name="updatedDate" column="UPDATED_DATE" type="java.util.Date"/>
	</class>

	<sql-query name="outboundDocumentType.selectAll">
	<![CDATA[
		SELECT CREATED_BY,
		       IS_ACTIVE,
		       OUTBOUND_DOCUMENT_TYPE_ID,
		       TYPE,
		       TO_CHAR(CREATED_DATE, 'yyyymmddhh24miss') AS CREATED_DATE,
		       SHORT_NAME,
		       UPDATED_BY,
		       TO_CHAR(UPDATED_DATE, 'yyyymmddhh24miss') AS UPDATED_DATE
		  FROM OUTBOUND_DOCUMENT_TYPE
		 WHERE 1 = 1
		 ${auto_fill}
		 ${frameworkGeneratedWhere}
		 ${frameworkGeneratedOrderBy}
	]]>
	</sql-query>

	<sql-query name="outboundDocumentType.insert">
	<![CDATA[
		INSERT INTO OUTBOUND_DOCUMENT_TYPE (
		       CREATED_BY,
		       IS_ACTIVE,
		       OUTBOUND_DOCUMENT_TYPE_ID,
		       TYPE,
		       CREATED_DATE,
		       SHORT_NAME,
		       UPDATED_BY,
		       UPDATED_DATE
		       )
		VALUES (
		       ${CREATED_BY},
		       ${IS_ACTIVE},
		       ${OUTBOUND_DOCUMENT_TYPE_ID},
		       ${TYPE},
		       ${CREATED_DATE},
		       ${SHORT_NAME},
		       ${UPDATED_BY},
		       ${UPDATED_DATE}
		       )
	]]>
	</sql-query>

	<sql-query name="outboundDocumentType.update">
	<![CDATA[
		UPDATE OUTBOUND_DOCUMENT_TYPE
		   SET CREATED_BY = ${CREATED_BY},
		       IS_ACTIVE = ${IS_ACTIVE},
		       OUTBOUND_DOCUMENT_TYPE_ID = ${OUTBOUND_DOCUMENT_TYPE_ID},
		       TYPE = ${TYPE},
		       CREATED_DATE = ${CREATED_DATE},
		       SHORT_NAME = ${SHORT_NAME},
		       UPDATED_BY = ${UPDATED_BY},
		       UPDATED_DATE = ${UPDATED_DATE}
		 WHERE 1 = 1
		   ${frameworkGeneratedWhere}
	]]>
	</sql-query>

	<sql-query name="outboundDocumentType.updateColumns">
	<![CDATA[
		UPDATE OUTBOUND_DOCUMENT_TYPE
		   SET ${frameworkGeneratedColumnsToUpdate}
		 WHERE 1 = 1
		 ${frameworkGeneratedWhere}
	]]>
	</sql-query>

	<sql-query name="outboundDocumentType.delete">
	<![CDATA[
		DELETE OUTBOUND_DOCUMENT_TYPE
		 WHERE 1 = 1
		   ${frameworkGeneratedWhere}
	]]>
	</sql-query>
</hibernate-mapping>