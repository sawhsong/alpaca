<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN" "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<!--/*
 * Framework Generated Hibernate Config hbm Source
 * - PAYMENT_SUMM_GENERATION_LOG - 
 */-->
<hibernate-mapping>
	<class name="project.conf.resource.ormapper.dto.oracle.PaymentSummGenerationLog" table="PAYMENT_SUMM_GENERATION_LOG" lazy="false">
		<meta attribute="class-description" inherit="false"></meta>

		<id name="logId" column="LOG_ID" type="java.lang.Double"></id>

		<property name="batchId" column="BATCH_ID" not-null="true" type="java.lang.String" length="20"/>
		<property name="createdBy" column="CREATED_BY" not-null="true" type="java.lang.Double"/>
		<property name="creationDate" column="CREATION_DATE" not-null="true" type="java.util.Date"/>
		<property name="details" column="DETAILS" not-null="true" type="java.lang.String" length="0"/>
		<property name="employeeName" column="EMPLOYEE_NAME" not-null="true" type="java.lang.String" length="50"/>
		<property name="employmentCompany" column="EMPLOYMENT_COMPANY" not-null="true" type="java.lang.String" length="50"/>
		<property name="financialYear" column="FINANCIAL_YEAR" not-null="true" type="java.lang.String" length="21"/>
		<property name="lastUpdatedBy" column="LAST_UPDATED_BY" not-null="true" type="java.lang.Double"/>
		<property name="lastUpdateDate" column="LAST_UPDATE_DATE" not-null="true" type="java.util.Date"/>
		<property name="paymentSummaryId" column="PAYMENT_SUMMARY_ID" type="java.lang.Double"/>
	</class>

	<sql-query name="paymentSummGenerationLog.selectAll">
	<![CDATA[
		SELECT LOG_ID,
		       BATCH_ID,
		       CREATED_BY,
		       TO_CHAR(CREATION_DATE, 'yyyymmddhh24miss') AS CREATION_DATE,
		       DETAILS,
		       EMPLOYEE_NAME,
		       EMPLOYMENT_COMPANY,
		       FINANCIAL_YEAR,
		       LAST_UPDATED_BY,
		       TO_CHAR(LAST_UPDATE_DATE, 'yyyymmddhh24miss') AS LAST_UPDATE_DATE,
		       PAYMENT_SUMMARY_ID
		  FROM PAYMENT_SUMM_GENERATION_LOG
		 WHERE 1 = 1
		 ${auto_fill}
		 ${frameworkGeneratedWhere}
		 ${frameworkGeneratedOrderBy}
	]]>
	</sql-query>

	<sql-query name="paymentSummGenerationLog.insert">
	<![CDATA[
		INSERT INTO PAYMENT_SUMM_GENERATION_LOG (
		       LOG_ID,
		       BATCH_ID,
		       CREATED_BY,
		       CREATION_DATE,
		       DETAILS,
		       EMPLOYEE_NAME,
		       EMPLOYMENT_COMPANY,
		       FINANCIAL_YEAR,
		       LAST_UPDATED_BY,
		       LAST_UPDATE_DATE,
		       PAYMENT_SUMMARY_ID
		       )
		VALUES (
		       ${LOG_ID},
		       ${BATCH_ID},
		       ${CREATED_BY},
		       ${CREATION_DATE},
		       ${DETAILS},
		       ${EMPLOYEE_NAME},
		       ${EMPLOYMENT_COMPANY},
		       ${FINANCIAL_YEAR},
		       ${LAST_UPDATED_BY},
		       ${LAST_UPDATE_DATE},
		       ${PAYMENT_SUMMARY_ID}
		       )
	]]>
	</sql-query>

	<sql-query name="paymentSummGenerationLog.update">
	<![CDATA[
		UPDATE PAYMENT_SUMM_GENERATION_LOG
		   SET BATCH_ID = ${BATCH_ID},
		       CREATED_BY = ${CREATED_BY},
		       CREATION_DATE = ${CREATION_DATE},
		       DETAILS = ${DETAILS},
		       EMPLOYEE_NAME = ${EMPLOYEE_NAME},
		       EMPLOYMENT_COMPANY = ${EMPLOYMENT_COMPANY},
		       FINANCIAL_YEAR = ${FINANCIAL_YEAR},
		       LAST_UPDATED_BY = ${LAST_UPDATED_BY},
		       LAST_UPDATE_DATE = ${LAST_UPDATE_DATE},
		       PAYMENT_SUMMARY_ID = ${PAYMENT_SUMMARY_ID}
		 WHERE 1 = 1
		   ${frameworkGeneratedWhere}
	]]>
	</sql-query>

	<sql-query name="paymentSummGenerationLog.updateColumns">
	<![CDATA[
		UPDATE PAYMENT_SUMM_GENERATION_LOG
		   SET ${frameworkGeneratedColumnsToUpdate}
		 WHERE 1 = 1
		 ${frameworkGeneratedWhere}
	]]>
	</sql-query>

	<sql-query name="paymentSummGenerationLog.delete">
	<![CDATA[
		DELETE PAYMENT_SUMM_GENERATION_LOG
		 WHERE 1 = 1
		   ${frameworkGeneratedWhere}
	]]>
	</sql-query>
</hibernate-mapping>