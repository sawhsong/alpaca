<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN" "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<!--/*
 * Framework Generated Hibernate Config hbm Source
 * - DOCUMENT_PROFILE_D - 
 */-->
<hibernate-mapping>
	<class name="project.conf.resource.ormapper.dto.oracle.DocumentProfileD" table="DOCUMENT_PROFILE_D" lazy="false">
		<meta attribute="class-description" inherit="false"></meta>

		<id column="ROWID" type="java.lang.String"/>

		<property name="createdBy" column="CREATED_BY" type="java.lang.Double"/>
		<property name="creationDate" column="CREATION_DATE" type="java.util.Date"/>
		<property name="description" column="DESCRIPTION" type="java.lang.String" length="1000"/>
		<property name="dueDateOffset" column="DUE_DATE_OFFSET" type="java.lang.Double"/>
		<property name="dueDateOffsetSource" column="DUE_DATE_OFFSET_SOURCE" type="java.lang.String" length="300"/>
		<property name="followUpDateOffset" column="FOLLOW_UP_DATE_OFFSET" type="java.lang.Double"/>
		<property name="followUpDateOffsetSource" column="FOLLOW_UP_DATE_OFFSET_SOURCE" type="java.lang.String" length="300"/>
		<property name="isActive" column="IS_ACTIVE" type="java.lang.String" length="300"/>
		<property name="lastUpdatedBy" column="LAST_UPDATED_BY" type="java.lang.Double"/>
		<property name="lastUpdateDate" column="LAST_UPDATE_DATE" type="java.util.Date"/>
		<property name="masterDocumentId" column="MASTER_DOCUMENT_ID" type="java.lang.Double"/>
		<property name="profileDId" column="PROFILE_D_ID" type="java.lang.Double"/>
		<property name="profileId" column="PROFILE_ID" type="java.lang.Double"/>
	</class>

	<sql-query name="documentProfileD.selectAll">
	<![CDATA[
		SELECT CREATED_BY,
		       TO_CHAR(CREATION_DATE, 'yyyymmddhh24miss') AS CREATION_DATE,
		       DESCRIPTION,
		       DUE_DATE_OFFSET,
		       DUE_DATE_OFFSET_SOURCE,
		       FOLLOW_UP_DATE_OFFSET,
		       FOLLOW_UP_DATE_OFFSET_SOURCE,
		       IS_ACTIVE,
		       LAST_UPDATED_BY,
		       TO_CHAR(LAST_UPDATE_DATE, 'yyyymmddhh24miss') AS LAST_UPDATE_DATE,
		       MASTER_DOCUMENT_ID,
		       PROFILE_D_ID,
		       PROFILE_ID
		  FROM DOCUMENT_PROFILE_D
		 WHERE 1 = 1
		 ${auto_fill}
		 ${frameworkGeneratedWhere}
		 ${frameworkGeneratedOrderBy}
	]]>
	</sql-query>

	<sql-query name="documentProfileD.insert">
	<![CDATA[
		INSERT INTO DOCUMENT_PROFILE_D (
		       CREATED_BY,
		       CREATION_DATE,
		       DESCRIPTION,
		       DUE_DATE_OFFSET,
		       DUE_DATE_OFFSET_SOURCE,
		       FOLLOW_UP_DATE_OFFSET,
		       FOLLOW_UP_DATE_OFFSET_SOURCE,
		       IS_ACTIVE,
		       LAST_UPDATED_BY,
		       LAST_UPDATE_DATE,
		       MASTER_DOCUMENT_ID,
		       PROFILE_D_ID,
		       PROFILE_ID
		       )
		VALUES (
		       ${CREATED_BY},
		       ${CREATION_DATE},
		       ${DESCRIPTION},
		       ${DUE_DATE_OFFSET},
		       ${DUE_DATE_OFFSET_SOURCE},
		       ${FOLLOW_UP_DATE_OFFSET},
		       ${FOLLOW_UP_DATE_OFFSET_SOURCE},
		       ${IS_ACTIVE},
		       ${LAST_UPDATED_BY},
		       ${LAST_UPDATE_DATE},
		       ${MASTER_DOCUMENT_ID},
		       ${PROFILE_D_ID},
		       ${PROFILE_ID}
		       )
	]]>
	</sql-query>

	<sql-query name="documentProfileD.update">
	<![CDATA[
		UPDATE DOCUMENT_PROFILE_D
		   SET CREATED_BY = ${CREATED_BY},
		       CREATION_DATE = ${CREATION_DATE},
		       DESCRIPTION = ${DESCRIPTION},
		       DUE_DATE_OFFSET = ${DUE_DATE_OFFSET},
		       DUE_DATE_OFFSET_SOURCE = ${DUE_DATE_OFFSET_SOURCE},
		       FOLLOW_UP_DATE_OFFSET = ${FOLLOW_UP_DATE_OFFSET},
		       FOLLOW_UP_DATE_OFFSET_SOURCE = ${FOLLOW_UP_DATE_OFFSET_SOURCE},
		       IS_ACTIVE = ${IS_ACTIVE},
		       LAST_UPDATED_BY = ${LAST_UPDATED_BY},
		       LAST_UPDATE_DATE = ${LAST_UPDATE_DATE},
		       MASTER_DOCUMENT_ID = ${MASTER_DOCUMENT_ID},
		       PROFILE_D_ID = ${PROFILE_D_ID},
		       PROFILE_ID = ${PROFILE_ID}
		 WHERE 1 = 1
		   ${frameworkGeneratedWhere}
	]]>
	</sql-query>

	<sql-query name="documentProfileD.updateColumns">
	<![CDATA[
		UPDATE DOCUMENT_PROFILE_D
		   SET ${frameworkGeneratedColumnsToUpdate}
		 WHERE 1 = 1
		 ${frameworkGeneratedWhere}
	]]>
	</sql-query>

	<sql-query name="documentProfileD.delete">
	<![CDATA[
		DELETE DOCUMENT_PROFILE_D
		 WHERE 1 = 1
		   ${frameworkGeneratedWhere}
	]]>
	</sql-query>
</hibernate-mapping>