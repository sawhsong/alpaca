<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN" "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<!--/*
 * Framework Generated Hibernate Config hbm Source
 * - WSO2_API_ORGANISATION_LINK - 
 */-->
<hibernate-mapping>
	<class name="project.conf.resource.ormapper.dto.oracle.Wso2ApiOrganisationLink" table="WSO2_API_ORGANISATION_LINK" lazy="false">
		<meta attribute="class-description" inherit="false"></meta>

		<id column="ROWID" type="java.lang.String"/>

		<property name="isActive" column="IS_ACTIVE" not-null="true" type="java.lang.String" length="1"/>
		<property name="linkId" column="LINK_ID" not-null="true" type="java.lang.Double"/>
		<property name="organisationId" column="ORGANISATION_ID" not-null="true" type="java.lang.Double"/>
		<property name="wso2ApiConfigId" column="WSO2_API_CONFIG_ID" not-null="true" type="java.lang.Double"/>
	</class>

	<sql-query name="wso2ApiOrganisationLink.selectAll">
	<![CDATA[
		SELECT IS_ACTIVE,
		       LINK_ID,
		       ORGANISATION_ID,
		       WSO2_API_CONFIG_ID
		  FROM WSO2_API_ORGANISATION_LINK
		 WHERE 1 = 1
		 ${auto_fill}
		 ${frameworkGeneratedWhere}
		 ${frameworkGeneratedOrderBy}
	]]>
	</sql-query>

	<sql-query name="wso2ApiOrganisationLink.insert">
	<![CDATA[
		INSERT INTO WSO2_API_ORGANISATION_LINK (
		       IS_ACTIVE,
		       LINK_ID,
		       ORGANISATION_ID,
		       WSO2_API_CONFIG_ID
		       )
		VALUES (
		       ${IS_ACTIVE},
		       ${LINK_ID},
		       ${ORGANISATION_ID},
		       ${WSO2_API_CONFIG_ID}
		       )
	]]>
	</sql-query>

	<sql-query name="wso2ApiOrganisationLink.update">
	<![CDATA[
		UPDATE WSO2_API_ORGANISATION_LINK
		   SET IS_ACTIVE = ${IS_ACTIVE},
		       LINK_ID = ${LINK_ID},
		       ORGANISATION_ID = ${ORGANISATION_ID},
		       WSO2_API_CONFIG_ID = ${WSO2_API_CONFIG_ID}
		 WHERE 1 = 1
		   ${frameworkGeneratedWhere}
	]]>
	</sql-query>

	<sql-query name="wso2ApiOrganisationLink.updateColumns">
	<![CDATA[
		UPDATE WSO2_API_ORGANISATION_LINK
		   SET ${frameworkGeneratedColumnsToUpdate}
		 WHERE 1 = 1
		 ${frameworkGeneratedWhere}
	]]>
	</sql-query>

	<sql-query name="wso2ApiOrganisationLink.delete">
	<![CDATA[
		DELETE WSO2_API_ORGANISATION_LINK
		 WHERE 1 = 1
		   ${frameworkGeneratedWhere}
	]]>
	</sql-query>
</hibernate-mapping>