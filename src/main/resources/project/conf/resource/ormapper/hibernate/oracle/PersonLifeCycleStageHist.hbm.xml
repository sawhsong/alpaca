<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN" "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<!--/*
 * Framework Generated Hibernate Config hbm Source
 * - PERSON_LIFE_CYCLE_STAGE_HIST - 
 */-->
<hibernate-mapping>
	<class name="project.conf.resource.ormapper.dto.oracle.PersonLifeCycleStageHist" table="PERSON_LIFE_CYCLE_STAGE_HIST" lazy="false">
		<meta attribute="class-description" inherit="false"></meta>

		<id column="ROWID" type="java.lang.String"/>

		<property name="historyId" column="HISTORY_ID" not-null="true" type="java.lang.Double"/>
		<property name="personId" column="PERSON_ID" not-null="true" type="java.lang.Double"/>
		<property name="createdBy" column="CREATED_BY" type="java.lang.Double"/>
		<property name="creationDate" column="CREATION_DATE" type="java.util.Date"/>
		<property name="stageFromTo" column="STAGE_FROM_TO" type="java.lang.String" length="500"/>
	</class>

	<sql-query name="personLifeCycleStageHist.selectAll">
	<![CDATA[
		SELECT HISTORY_ID,
		       PERSON_ID,
		       CREATED_BY,
		       TO_CHAR(CREATION_DATE, 'yyyymmddhh24miss') AS CREATION_DATE,
		       STAGE_FROM_TO
		  FROM PERSON_LIFE_CYCLE_STAGE_HIST
		 WHERE 1 = 1
		 ${auto_fill}
		 ${frameworkGeneratedWhere}
		 ${frameworkGeneratedOrderBy}
	]]>
	</sql-query>

	<sql-query name="personLifeCycleStageHist.insert">
	<![CDATA[
		INSERT INTO PERSON_LIFE_CYCLE_STAGE_HIST (
		       HISTORY_ID,
		       PERSON_ID,
		       CREATED_BY,
		       CREATION_DATE,
		       STAGE_FROM_TO
		       )
		VALUES (
		       ${HISTORY_ID},
		       ${PERSON_ID},
		       ${CREATED_BY},
		       ${CREATION_DATE},
		       ${STAGE_FROM_TO}
		       )
	]]>
	</sql-query>

	<sql-query name="personLifeCycleStageHist.update">
	<![CDATA[
		UPDATE PERSON_LIFE_CYCLE_STAGE_HIST
		   SET HISTORY_ID = ${HISTORY_ID},
		       PERSON_ID = ${PERSON_ID},
		       CREATED_BY = ${CREATED_BY},
		       CREATION_DATE = ${CREATION_DATE},
		       STAGE_FROM_TO = ${STAGE_FROM_TO}
		 WHERE 1 = 1
		   ${frameworkGeneratedWhere}
	]]>
	</sql-query>

	<sql-query name="personLifeCycleStageHist.updateColumns">
	<![CDATA[
		UPDATE PERSON_LIFE_CYCLE_STAGE_HIST
		   SET ${frameworkGeneratedColumnsToUpdate}
		 WHERE 1 = 1
		 ${frameworkGeneratedWhere}
	]]>
	</sql-query>

	<sql-query name="personLifeCycleStageHist.delete">
	<![CDATA[
		DELETE PERSON_LIFE_CYCLE_STAGE_HIST
		 WHERE 1 = 1
		   ${frameworkGeneratedWhere}
	]]>
	</sql-query>
</hibernate-mapping>