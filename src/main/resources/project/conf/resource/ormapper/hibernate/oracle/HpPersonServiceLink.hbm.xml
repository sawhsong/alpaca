<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN" "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<!--/*
 * Framework Generated Hibernate Config hbm Source
 * - HP_PERSON_SERVICE_LINK - 
 */-->
<hibernate-mapping>
	<class name="project.conf.resource.ormapper.dto.oracle.HpPersonServiceLink" table="HP_PERSON_SERVICE_LINK" lazy="false">
		<meta attribute="class-description" inherit="false"></meta>

		<id name="linkId" column="LINK_ID" type="java.lang.Double"></id>

		<property name="personId" column="PERSON_ID" type="java.lang.Double"/>
		<property name="personServiceId" column="PERSON_SERVICE_ID" type="java.lang.Double"/>
		<property name="wso2ApiConfigId" column="WSO2_API_CONFIG_ID" type="java.lang.Double"/>
	</class>

	<sql-query name="hpPersonServiceLink.selectAll">
	<![CDATA[
		SELECT LINK_ID,
		       PERSON_ID,
		       PERSON_SERVICE_ID,
		       WSO2_API_CONFIG_ID
		  FROM HP_PERSON_SERVICE_LINK
		 WHERE 1 = 1
		 ${auto_fill}
		 ${frameworkGeneratedWhere}
		 ${frameworkGeneratedOrderBy}
	]]>
	</sql-query>

	<sql-query name="hpPersonServiceLink.insert">
	<![CDATA[
		INSERT INTO HP_PERSON_SERVICE_LINK (
		       LINK_ID,
		       PERSON_ID,
		       PERSON_SERVICE_ID,
		       WSO2_API_CONFIG_ID
		       )
		VALUES (
		       ${LINK_ID},
		       ${PERSON_ID},
		       ${PERSON_SERVICE_ID},
		       ${WSO2_API_CONFIG_ID}
		       )
	]]>
	</sql-query>

	<sql-query name="hpPersonServiceLink.update">
	<![CDATA[
		UPDATE HP_PERSON_SERVICE_LINK
		   SET PERSON_ID = ${PERSON_ID},
		       PERSON_SERVICE_ID = ${PERSON_SERVICE_ID},
		       WSO2_API_CONFIG_ID = ${WSO2_API_CONFIG_ID}
		 WHERE 1 = 1
		   ${frameworkGeneratedWhere}
	]]>
	</sql-query>

	<sql-query name="hpPersonServiceLink.updateColumns">
	<![CDATA[
		UPDATE HP_PERSON_SERVICE_LINK
		   SET ${frameworkGeneratedColumnsToUpdate}
		 WHERE 1 = 1
		 ${frameworkGeneratedWhere}
	]]>
	</sql-query>

	<sql-query name="hpPersonServiceLink.delete">
	<![CDATA[
		DELETE HP_PERSON_SERVICE_LINK
		 WHERE 1 = 1
		   ${frameworkGeneratedWhere}
	]]>
	</sql-query>
</hibernate-mapping>