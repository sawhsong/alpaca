<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN" "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<!--/*
 * Framework Generated Hibernate Config hbm Source
 * - HP_PAY_ADV_PREFRENCE - 
 */-->
<hibernate-mapping>
	<class name="project.conf.resource.ormapper.dto.oracle.HpPayAdvPrefrence" table="HP_PAY_ADV_PREFRENCE" lazy="false">
		<meta attribute="class-description" inherit="false"></meta>

		<id name="preferenceId" column="PREFERENCE_ID" type="java.lang.Double"></id>

		<property name="personId" column="PERSON_ID" not-null="true" type="java.lang.Double"/>
		<property name="emailYn" column="EMAIL_YN" type="java.lang.String" length="1"/>
		<property name="onlineYn" column="ONLINE_YN" type="java.lang.String" length="1"/>
		<property name="otherYn" column="OTHER_YN" type="java.lang.String" length="1"/>
		<property name="othDesc" column="OTH_DESC" type="java.lang.String" length="100"/>
	</class>

	<sql-query name="hpPayAdvPrefrence.selectAll">
	<![CDATA[
		SELECT PREFERENCE_ID,
		       PERSON_ID,
		       EMAIL_YN,
		       ONLINE_YN,
		       OTHER_YN,
		       OTH_DESC
		  FROM HP_PAY_ADV_PREFRENCE
		 WHERE 1 = 1
		 ${auto_fill}
		 ${frameworkGeneratedWhere}
		 ${frameworkGeneratedOrderBy}
	]]>
	</sql-query>

	<sql-query name="hpPayAdvPrefrence.insert">
	<![CDATA[
		INSERT INTO HP_PAY_ADV_PREFRENCE (
		       PREFERENCE_ID,
		       PERSON_ID,
		       EMAIL_YN,
		       ONLINE_YN,
		       OTHER_YN,
		       OTH_DESC
		       )
		VALUES (
		       ${PREFERENCE_ID},
		       ${PERSON_ID},
		       ${EMAIL_YN},
		       ${ONLINE_YN},
		       ${OTHER_YN},
		       ${OTH_DESC}
		       )
	]]>
	</sql-query>

	<sql-query name="hpPayAdvPrefrence.update">
	<![CDATA[
		UPDATE HP_PAY_ADV_PREFRENCE
		   SET PERSON_ID = ${PERSON_ID},
		       EMAIL_YN = ${EMAIL_YN},
		       ONLINE_YN = ${ONLINE_YN},
		       OTHER_YN = ${OTHER_YN},
		       OTH_DESC = ${OTH_DESC}
		 WHERE 1 = 1
		   ${frameworkGeneratedWhere}
	]]>
	</sql-query>

	<sql-query name="hpPayAdvPrefrence.updateColumns">
	<![CDATA[
		UPDATE HP_PAY_ADV_PREFRENCE
		   SET ${frameworkGeneratedColumnsToUpdate}
		 WHERE 1 = 1
		 ${frameworkGeneratedWhere}
	]]>
	</sql-query>

	<sql-query name="hpPayAdvPrefrence.delete">
	<![CDATA[
		DELETE HP_PAY_ADV_PREFRENCE
		 WHERE 1 = 1
		   ${frameworkGeneratedWhere}
	]]>
	</sql-query>
</hibernate-mapping>