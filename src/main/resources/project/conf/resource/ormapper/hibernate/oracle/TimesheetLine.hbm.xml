<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN" "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<!--/*
 * Framework Generated Hibernate Config hbm Source
 * - TIMESHEET_LINE - 
 */-->
<hibernate-mapping>
	<class name="project.conf.resource.ormapper.dto.oracle.TimesheetLine" table="TIMESHEET_LINE" lazy="false">
		<meta attribute="class-description" inherit="false"></meta>

		<id name="timesheetLineId" column="TIMESHEET_LINE_ID" type="java.lang.Double"></id>

		<property name="assignmentRateId" column="ASSIGNMENT_RATE_ID" type="java.lang.Double"/>
		<property name="description" column="DESCRIPTION" type="java.lang.String" length="1000"/>
		<property name="endTime" column="END_TIME" type="java.lang.String" length="20"/>
		<property name="hours" column="HOURS" type="java.lang.Double"/>
		<property name="nonworkedTime" column="NONWORKED_TIME" type="java.lang.String" length="20"/>
		<property name="startTime" column="START_TIME" type="java.lang.String" length="20"/>
		<property name="timesheetId" column="TIMESHEET_ID" type="java.lang.Double"/>
		<property name="workDate" column="WORK_DATE" type="java.util.Date"/>
	</class>

	<sql-query name="timesheetLine.selectAll">
	<![CDATA[
		SELECT TIMESHEET_LINE_ID,
		       ASSIGNMENT_RATE_ID,
		       DESCRIPTION,
		       END_TIME,
		       HOURS,
		       NONWORKED_TIME,
		       START_TIME,
		       TIMESHEET_ID,
		       TO_CHAR(WORK_DATE, 'yyyymmddhh24miss') AS WORK_DATE
		  FROM TIMESHEET_LINE
		 WHERE 1 = 1
		 ${auto_fill}
		 ${frameworkGeneratedWhere}
		 ${frameworkGeneratedOrderBy}
	]]>
	</sql-query>

	<sql-query name="timesheetLine.insert">
	<![CDATA[
		INSERT INTO TIMESHEET_LINE (
		       TIMESHEET_LINE_ID,
		       ASSIGNMENT_RATE_ID,
		       DESCRIPTION,
		       END_TIME,
		       HOURS,
		       NONWORKED_TIME,
		       START_TIME,
		       TIMESHEET_ID,
		       WORK_DATE
		       )
		VALUES (
		       ${TIMESHEET_LINE_ID},
		       ${ASSIGNMENT_RATE_ID},
		       ${DESCRIPTION},
		       ${END_TIME},
		       ${HOURS},
		       ${NONWORKED_TIME},
		       ${START_TIME},
		       ${TIMESHEET_ID},
		       ${WORK_DATE}
		       )
	]]>
	</sql-query>

	<sql-query name="timesheetLine.update">
	<![CDATA[
		UPDATE TIMESHEET_LINE
		   SET ASSIGNMENT_RATE_ID = ${ASSIGNMENT_RATE_ID},
		       DESCRIPTION = ${DESCRIPTION},
		       END_TIME = ${END_TIME},
		       HOURS = ${HOURS},
		       NONWORKED_TIME = ${NONWORKED_TIME},
		       START_TIME = ${START_TIME},
		       TIMESHEET_ID = ${TIMESHEET_ID},
		       WORK_DATE = ${WORK_DATE}
		 WHERE 1 = 1
		   ${frameworkGeneratedWhere}
	]]>
	</sql-query>

	<sql-query name="timesheetLine.updateColumns">
	<![CDATA[
		UPDATE TIMESHEET_LINE
		   SET ${frameworkGeneratedColumnsToUpdate}
		 WHERE 1 = 1
		 ${frameworkGeneratedWhere}
	]]>
	</sql-query>

	<sql-query name="timesheetLine.delete">
	<![CDATA[
		DELETE TIMESHEET_LINE
		 WHERE 1 = 1
		   ${frameworkGeneratedWhere}
	]]>
	</sql-query>
</hibernate-mapping>