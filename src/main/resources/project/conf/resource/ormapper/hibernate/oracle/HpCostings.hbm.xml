<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN" "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<!--/*
 * Framework Generated Hibernate Config hbm Source
 * - HP_COSTINGS - 
 */-->
<hibernate-mapping>
	<class name="project.conf.resource.ormapper.dto.oracle.HpCostings" table="HP_COSTINGS" lazy="false">
		<meta attribute="class-description" inherit="false"></meta>

		<id name="costingId" column="COSTING_ID" type="java.lang.Double"></id>

		<property name="createdBy" column="CREATED_BY" not-null="true" type="java.lang.Double"/>
		<property name="creationDate" column="CREATION_DATE" not-null="true" type="java.util.Date"/>
		<property name="lastUpdatedBy" column="LAST_UPDATED_BY" not-null="true" type="java.lang.Double"/>
		<property name="lastUpdateDate" column="LAST_UPDATE_DATE" not-null="true" type="java.util.Date"/>
		<property name="assignmentProcessId" column="ASSIGNMENT_PROCESS_ID" type="java.lang.Double"/>
		<property name="businessGroupId" column="BUSINESS_GROUP_ID" type="java.lang.Double"/>
		<property name="costValue" column="COST_VALUE" type="java.lang.String" length="30"/>
		<property name="debitCreditFlag" column="DEBIT_CREDIT_FLAG" type="java.lang.String" length="1"/>
		<property name="elementName" column="ELEMENT_NAME" type="java.lang.String" length="200"/>
		<property name="glCode" column="GL_CODE" type="java.lang.String" length="30"/>
		<property name="myobFileId" column="MYOB_FILE_ID" type="java.lang.Double"/>
		<property name="paymentId" column="PAYMENT_ID" type="java.lang.Double"/>
		<property name="resultId" column="RESULT_ID" type="java.lang.Double"/>
	</class>

	<sql-query name="hpCostings.selectAll">
	<![CDATA[
		SELECT COSTING_ID,
		       CREATED_BY,
		       TO_CHAR(CREATION_DATE, 'yyyymmddhh24miss') AS CREATION_DATE,
		       LAST_UPDATED_BY,
		       TO_CHAR(LAST_UPDATE_DATE, 'yyyymmddhh24miss') AS LAST_UPDATE_DATE,
		       ASSIGNMENT_PROCESS_ID,
		       BUSINESS_GROUP_ID,
		       COST_VALUE,
		       DEBIT_CREDIT_FLAG,
		       ELEMENT_NAME,
		       GL_CODE,
		       MYOB_FILE_ID,
		       PAYMENT_ID,
		       RESULT_ID
		  FROM HP_COSTINGS
		 WHERE 1 = 1
		 ${auto_fill}
		 ${frameworkGeneratedWhere}
		 ${frameworkGeneratedOrderBy}
	]]>
	</sql-query>

	<sql-query name="hpCostings.insert">
	<![CDATA[
		INSERT INTO HP_COSTINGS (
		       COSTING_ID,
		       CREATED_BY,
		       CREATION_DATE,
		       LAST_UPDATED_BY,
		       LAST_UPDATE_DATE,
		       ASSIGNMENT_PROCESS_ID,
		       BUSINESS_GROUP_ID,
		       COST_VALUE,
		       DEBIT_CREDIT_FLAG,
		       ELEMENT_NAME,
		       GL_CODE,
		       MYOB_FILE_ID,
		       PAYMENT_ID,
		       RESULT_ID
		       )
		VALUES (
		       ${COSTING_ID},
		       ${CREATED_BY},
		       ${CREATION_DATE},
		       ${LAST_UPDATED_BY},
		       ${LAST_UPDATE_DATE},
		       ${ASSIGNMENT_PROCESS_ID},
		       ${BUSINESS_GROUP_ID},
		       ${COST_VALUE},
		       ${DEBIT_CREDIT_FLAG},
		       ${ELEMENT_NAME},
		       ${GL_CODE},
		       ${MYOB_FILE_ID},
		       ${PAYMENT_ID},
		       ${RESULT_ID}
		       )
	]]>
	</sql-query>

	<sql-query name="hpCostings.update">
	<![CDATA[
		UPDATE HP_COSTINGS
		   SET CREATED_BY = ${CREATED_BY},
		       CREATION_DATE = ${CREATION_DATE},
		       LAST_UPDATED_BY = ${LAST_UPDATED_BY},
		       LAST_UPDATE_DATE = ${LAST_UPDATE_DATE},
		       ASSIGNMENT_PROCESS_ID = ${ASSIGNMENT_PROCESS_ID},
		       BUSINESS_GROUP_ID = ${BUSINESS_GROUP_ID},
		       COST_VALUE = ${COST_VALUE},
		       DEBIT_CREDIT_FLAG = ${DEBIT_CREDIT_FLAG},
		       ELEMENT_NAME = ${ELEMENT_NAME},
		       GL_CODE = ${GL_CODE},
		       MYOB_FILE_ID = ${MYOB_FILE_ID},
		       PAYMENT_ID = ${PAYMENT_ID},
		       RESULT_ID = ${RESULT_ID}
		 WHERE 1 = 1
		   ${frameworkGeneratedWhere}
	]]>
	</sql-query>

	<sql-query name="hpCostings.updateColumns">
	<![CDATA[
		UPDATE HP_COSTINGS
		   SET ${frameworkGeneratedColumnsToUpdate}
		 WHERE 1 = 1
		 ${frameworkGeneratedWhere}
	]]>
	</sql-query>

	<sql-query name="hpCostings.delete">
	<![CDATA[
		DELETE HP_COSTINGS
		 WHERE 1 = 1
		   ${frameworkGeneratedWhere}
	]]>
	</sql-query>
</hibernate-mapping>