<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN" "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<!--/*
 * Framework Generated Hibernate Config hbm Source
 * - WSO2_API_CONFIG - 
 */-->
<hibernate-mapping>
	<class name="project.conf.resource.ormapper.dto.oracle.Wso2ApiConfig" table="WSO2_API_CONFIG" lazy="false">
		<meta attribute="class-description" inherit="false"></meta>

		<id column="ROWID" type="java.lang.String"/>

		<property name="isActive" column="IS_ACTIVE" not-null="true" type="java.lang.String" length="1"/>
		<property name="wso2ApiConfigId" column="WSO2_API_CONFIG_ID" not-null="true" type="java.lang.Double"/>
		<property name="wso2ApplicationName" column="WSO2_APPLICATION_NAME" not-null="true" type="java.lang.String" length="500"/>
		<property name="productionToken" column="PRODUCTION_TOKEN" type="java.lang.String" length="500"/>
		<property name="sandboxToken" column="SANDBOX_TOKEN" type="java.lang.String" length="500"/>
	</class>

	<sql-query name="wso2ApiConfig.selectAll">
	<![CDATA[
		SELECT IS_ACTIVE,
		       WSO2_API_CONFIG_ID,
		       WSO2_APPLICATION_NAME,
		       PRODUCTION_TOKEN,
		       SANDBOX_TOKEN
		  FROM WSO2_API_CONFIG
		 WHERE 1 = 1
		 ${auto_fill}
		 ${frameworkGeneratedWhere}
		 ${frameworkGeneratedOrderBy}
	]]>
	</sql-query>

	<sql-query name="wso2ApiConfig.insert">
	<![CDATA[
		INSERT INTO WSO2_API_CONFIG (
		       IS_ACTIVE,
		       WSO2_API_CONFIG_ID,
		       WSO2_APPLICATION_NAME,
		       PRODUCTION_TOKEN,
		       SANDBOX_TOKEN
		       )
		VALUES (
		       ${IS_ACTIVE},
		       ${WSO2_API_CONFIG_ID},
		       ${WSO2_APPLICATION_NAME},
		       ${PRODUCTION_TOKEN},
		       ${SANDBOX_TOKEN}
		       )
	]]>
	</sql-query>

	<sql-query name="wso2ApiConfig.update">
	<![CDATA[
		UPDATE WSO2_API_CONFIG
		   SET IS_ACTIVE = ${IS_ACTIVE},
		       WSO2_API_CONFIG_ID = ${WSO2_API_CONFIG_ID},
		       WSO2_APPLICATION_NAME = ${WSO2_APPLICATION_NAME},
		       PRODUCTION_TOKEN = ${PRODUCTION_TOKEN},
		       SANDBOX_TOKEN = ${SANDBOX_TOKEN}
		 WHERE 1 = 1
		   ${frameworkGeneratedWhere}
	]]>
	</sql-query>

	<sql-query name="wso2ApiConfig.updateColumns">
	<![CDATA[
		UPDATE WSO2_API_CONFIG
		   SET ${frameworkGeneratedColumnsToUpdate}
		 WHERE 1 = 1
		 ${frameworkGeneratedWhere}
	]]>
	</sql-query>

	<sql-query name="wso2ApiConfig.delete">
	<![CDATA[
		DELETE WSO2_API_CONFIG
		 WHERE 1 = 1
		   ${frameworkGeneratedWhere}
	]]>
	</sql-query>
</hibernate-mapping>