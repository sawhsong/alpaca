<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN" "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<!--/*
 * Framework Generated Hibernate Config hbm Source
 * - PORTAL_SIGNUP_BANK_DETAILS - 
 */-->
<hibernate-mapping>
	<class name="project.conf.resource.ormapper.dto.oracle.PortalSignupBankDetails" table="PORTAL_SIGNUP_BANK_DETAILS" lazy="false">
		<meta attribute="class-description" inherit="false"></meta>

		<id name="bankDetailsId" column="BANK_DETAILS_ID" type="java.lang.Double"></id>

		<property name="userTfId" column="USER_TF_ID" not-null="true" type="java.lang.Double"/>
		<property name="createdBy" column="CREATED_BY" not-null="true" type="java.lang.Double"/>
		<property name="creationDate" column="CREATION_DATE" not-null="true" type="java.util.Date"/>
		<property name="lastUpdatedBy" column="LAST_UPDATED_BY" not-null="true" type="java.lang.Double"/>
		<property name="lastUpdateDate" column="LAST_UPDATE_DATE" not-null="true" type="java.util.Date"/>
		<property name="asgPayMethodId" column="ASG_PAY_METHOD_ID" type="java.lang.Double"/>
		<property name="accountName" column="ACCOUNT_NAME" type="java.lang.String" length="100"/>
		<property name="accountNo" column="ACCOUNT_NO" type="java.lang.String" length="30"/>
		<property name="amount" column="AMOUNT" type="java.lang.Double"/>
		<property name="amountUnit" column="AMOUNT_UNIT" type="java.lang.String" length="1"/>
		<property name="bankName" column="BANK_NAME" type="java.lang.String" length="100"/>
		<property name="bsb" column="BSB" type="java.lang.String" length="30"/>
		<property name="priority" column="PRIORITY" type="java.lang.Double"/>
		<property name="transformed" column="TRANSFORMED" type="java.lang.String" length="1"/>
	</class>

	<sql-query name="portalSignupBankDetails.selectAll">
	<![CDATA[
		SELECT USER_TF_ID,
		       BANK_DETAILS_ID,
		       CREATED_BY,
		       TO_CHAR(CREATION_DATE, 'yyyymmddhh24miss') AS CREATION_DATE,
		       LAST_UPDATED_BY,
		       TO_CHAR(LAST_UPDATE_DATE, 'yyyymmddhh24miss') AS LAST_UPDATE_DATE,
		       ASG_PAY_METHOD_ID,
		       ACCOUNT_NAME,
		       ACCOUNT_NO,
		       AMOUNT,
		       AMOUNT_UNIT,
		       BANK_NAME,
		       BSB,
		       PRIORITY,
		       TRANSFORMED
		  FROM PORTAL_SIGNUP_BANK_DETAILS
		 WHERE 1 = 1
		 ${auto_fill}
		 ${frameworkGeneratedWhere}
		 ${frameworkGeneratedOrderBy}
	]]>
	</sql-query>

	<sql-query name="portalSignupBankDetails.insert">
	<![CDATA[
		INSERT INTO PORTAL_SIGNUP_BANK_DETAILS (
		       USER_TF_ID,
		       BANK_DETAILS_ID,
		       CREATED_BY,
		       CREATION_DATE,
		       LAST_UPDATED_BY,
		       LAST_UPDATE_DATE,
		       ASG_PAY_METHOD_ID,
		       ACCOUNT_NAME,
		       ACCOUNT_NO,
		       AMOUNT,
		       AMOUNT_UNIT,
		       BANK_NAME,
		       BSB,
		       PRIORITY,
		       TRANSFORMED
		       )
		VALUES (
		       ${USER_TF_ID},
		       ${BANK_DETAILS_ID},
		       ${CREATED_BY},
		       ${CREATION_DATE},
		       ${LAST_UPDATED_BY},
		       ${LAST_UPDATE_DATE},
		       ${ASG_PAY_METHOD_ID},
		       ${ACCOUNT_NAME},
		       ${ACCOUNT_NO},
		       ${AMOUNT},
		       ${AMOUNT_UNIT},
		       ${BANK_NAME},
		       ${BSB},
		       ${PRIORITY},
		       ${TRANSFORMED}
		       )
	]]>
	</sql-query>

	<sql-query name="portalSignupBankDetails.update">
	<![CDATA[
		UPDATE PORTAL_SIGNUP_BANK_DETAILS
		   SET USER_TF_ID = ${USER_TF_ID},
		       CREATED_BY = ${CREATED_BY},
		       CREATION_DATE = ${CREATION_DATE},
		       LAST_UPDATED_BY = ${LAST_UPDATED_BY},
		       LAST_UPDATE_DATE = ${LAST_UPDATE_DATE},
		       ASG_PAY_METHOD_ID = ${ASG_PAY_METHOD_ID},
		       ACCOUNT_NAME = ${ACCOUNT_NAME},
		       ACCOUNT_NO = ${ACCOUNT_NO},
		       AMOUNT = ${AMOUNT},
		       AMOUNT_UNIT = ${AMOUNT_UNIT},
		       BANK_NAME = ${BANK_NAME},
		       BSB = ${BSB},
		       PRIORITY = ${PRIORITY},
		       TRANSFORMED = ${TRANSFORMED}
		 WHERE 1 = 1
		   ${frameworkGeneratedWhere}
	]]>
	</sql-query>

	<sql-query name="portalSignupBankDetails.updateColumns">
	<![CDATA[
		UPDATE PORTAL_SIGNUP_BANK_DETAILS
		   SET ${frameworkGeneratedColumnsToUpdate}
		 WHERE 1 = 1
		 ${frameworkGeneratedWhere}
	]]>
	</sql-query>

	<sql-query name="portalSignupBankDetails.delete">
	<![CDATA[
		DELETE PORTAL_SIGNUP_BANK_DETAILS
		 WHERE 1 = 1
		   ${frameworkGeneratedWhere}
	]]>
	</sql-query>
</hibernate-mapping>