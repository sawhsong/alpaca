<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN" "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<!--/*
 * Framework Generated Hibernate Config hbm Source
 * - CUSTOMER_CASH_RECEIPT - 
 */-->
<hibernate-mapping>
	<class name="project.conf.resource.ormapper.dto.oracle.CustomerCashReceipt" table="CUSTOMER_CASH_RECEIPT" lazy="false">
		<meta attribute="class-description" inherit="false"></meta>

		<id name="receiptId" column="RECEIPT_ID" type="java.lang.Double"></id>

		<property name="bankAccountType" column="BANK_ACCOUNT_TYPE" type="java.lang.String" length="50"/>
		<property name="createdBy" column="CREATED_BY" type="java.lang.Double"/>
		<property name="creationDate" column="CREATION_DATE" type="java.util.Date"/>
		<property name="customerOrganisationId" column="CUSTOMER_ORGANISATION_ID" type="java.lang.Double"/>
		<property name="description" column="DESCRIPTION" type="java.lang.String" length="4000"/>
		<property name="lastUpdatedBy" column="LAST_UPDATED_BY" type="java.lang.Double"/>
		<property name="lastUpdateDate" column="LAST_UPDATE_DATE" type="java.util.Date"/>
		<property name="navDbName" column="NAV_DB_NAME" type="java.lang.String" length="10"/>
		<property name="navReceiptNo" column="NAV_RECEIPT_NO" type="java.lang.String" length="50"/>
		<property name="postingDate" column="POSTING_DATE" type="java.util.Date"/>
		<property name="receivedAmount" column="RECEIVED_AMOUNT" type="java.lang.Double"/>
	</class>

	<sql-query name="customerCashReceipt.selectAll">
	<![CDATA[
		SELECT RECEIPT_ID,
		       BANK_ACCOUNT_TYPE,
		       CREATED_BY,
		       TO_CHAR(CREATION_DATE, 'yyyymmddhh24miss') AS CREATION_DATE,
		       CUSTOMER_ORGANISATION_ID,
		       DESCRIPTION,
		       LAST_UPDATED_BY,
		       TO_CHAR(LAST_UPDATE_DATE, 'yyyymmddhh24miss') AS LAST_UPDATE_DATE,
		       NAV_DB_NAME,
		       NAV_RECEIPT_NO,
		       TO_CHAR(POSTING_DATE, 'yyyymmddhh24miss') AS POSTING_DATE,
		       RECEIVED_AMOUNT
		  FROM CUSTOMER_CASH_RECEIPT
		 WHERE 1 = 1
		 ${auto_fill}
		 ${frameworkGeneratedWhere}
		 ${frameworkGeneratedOrderBy}
	]]>
	</sql-query>

	<sql-query name="customerCashReceipt.insert">
	<![CDATA[
		INSERT INTO CUSTOMER_CASH_RECEIPT (
		       RECEIPT_ID,
		       BANK_ACCOUNT_TYPE,
		       CREATED_BY,
		       CREATION_DATE,
		       CUSTOMER_ORGANISATION_ID,
		       DESCRIPTION,
		       LAST_UPDATED_BY,
		       LAST_UPDATE_DATE,
		       NAV_DB_NAME,
		       NAV_RECEIPT_NO,
		       POSTING_DATE,
		       RECEIVED_AMOUNT
		       )
		VALUES (
		       ${RECEIPT_ID},
		       ${BANK_ACCOUNT_TYPE},
		       ${CREATED_BY},
		       ${CREATION_DATE},
		       ${CUSTOMER_ORGANISATION_ID},
		       ${DESCRIPTION},
		       ${LAST_UPDATED_BY},
		       ${LAST_UPDATE_DATE},
		       ${NAV_DB_NAME},
		       ${NAV_RECEIPT_NO},
		       ${POSTING_DATE},
		       ${RECEIVED_AMOUNT}
		       )
	]]>
	</sql-query>

	<sql-query name="customerCashReceipt.update">
	<![CDATA[
		UPDATE CUSTOMER_CASH_RECEIPT
		   SET BANK_ACCOUNT_TYPE = ${BANK_ACCOUNT_TYPE},
		       CREATED_BY = ${CREATED_BY},
		       CREATION_DATE = ${CREATION_DATE},
		       CUSTOMER_ORGANISATION_ID = ${CUSTOMER_ORGANISATION_ID},
		       DESCRIPTION = ${DESCRIPTION},
		       LAST_UPDATED_BY = ${LAST_UPDATED_BY},
		       LAST_UPDATE_DATE = ${LAST_UPDATE_DATE},
		       NAV_DB_NAME = ${NAV_DB_NAME},
		       NAV_RECEIPT_NO = ${NAV_RECEIPT_NO},
		       POSTING_DATE = ${POSTING_DATE},
		       RECEIVED_AMOUNT = ${RECEIVED_AMOUNT}
		 WHERE 1 = 1
		   ${frameworkGeneratedWhere}
	]]>
	</sql-query>

	<sql-query name="customerCashReceipt.updateColumns">
	<![CDATA[
		UPDATE CUSTOMER_CASH_RECEIPT
		   SET ${frameworkGeneratedColumnsToUpdate}
		 WHERE 1 = 1
		 ${frameworkGeneratedWhere}
	]]>
	</sql-query>

	<sql-query name="customerCashReceipt.delete">
	<![CDATA[
		DELETE CUSTOMER_CASH_RECEIPT
		 WHERE 1 = 1
		   ${frameworkGeneratedWhere}
	]]>
	</sql-query>
</hibernate-mapping>