<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring.xsd">

	<!-- /*Default Datasource*/ -->
	<!-- DriverManager -->
<!--
	<bean id="driverManager" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${jdbc.driver.driverClassName}"/>
		<property name="url" value="${jdbc.driver.url}"/>
		<property name="username" value="${jdbc.user.name}"/>
		<property name="password" value="${jdbc.user.pass}"/>
	</bean>
-->
	<!-- ConnectionPool -->
	<bean id="connectionPool" class="org.apache.tomcat.dbcp.dbcp2.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver.driverClassName}"/>
		<property name="url" value="${jdbc.driver.url}"/>
		<property name="username" value="${jdbc.user.name}"/>
		<property name="password" value="${jdbc.user.pass}"/>
	</bean>
	<!-- JNDI(both are OK) Alpaca uses connection pool, so these can be removed (2020.09.15) -->
<!--	<jee:jndi-lookup id="jndiFactory" jndi-name="jdbc/${jdbc.jndi.name}" resource-ref="true"/>-->
<!--
	<bean id="jndiFactory" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName" value="java:comp/env/jdbc/${jdbc.jndi.name}"/>
		<property name="resourceRef" value="true"/>
	</bean>
-->

	<!-- /*Additional Datasource*/ -->
<!--
	<bean id="driverManager_alpaca" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${jdbc.driver.driverClassName}"/>
		<property name="url" value="${jdbc.driver.url_alpaca}"/>
		<property name="username" value="${jdbc.user.name_alpaca}"/>
		<property name="password" value="${jdbc.user.pass_alpaca}"/>
	</bean>
-->
	<bean id="connectionPool_alpaca" class="org.apache.tomcat.dbcp.dbcp2.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver.driverClassName}"/>
		<property name="url" value="${jdbc.driver.url_alpaca}"/>
		<property name="username" value="${jdbc.user.name_alpaca}"/>
		<property name="password" value="${jdbc.user.pass_alpaca}"/>
	</bean>

<!--
	<bean id="driverManager_perciTest" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${jdbc.driver.driverClassName}"/>
		<property name="url" value="${jdbc.driver.url_perciTest}"/>
		<property name="username" value="${jdbc.user.name_perciTest}"/>
		<property name="password" value="${jdbc.user.pass_perciTest}"/>
	</bean>
-->
	<bean id="connectionPool_perciTest" class="org.apache.tomcat.dbcp.dbcp2.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver.driverClassName}"/>
		<property name="url" value="${jdbc.driver.url_perciTest}"/>
		<property name="username" value="${jdbc.user.name_perciTest}"/>
		<property name="password" value="${jdbc.user.pass_perciTest}"/>
	</bean>

	<!-- oracle ucp - Begin -->
<!--
	<bean id="driverManager_perciTest" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${jdbc.driver.driverClassName}"/>
		<property name="url" value="${jdbc.driver.url_perciTest}"/>
		<property name="username" value="${jdbc.user.name_perciTest}"/>
		<property name="password" value="${jdbc.user.pass_perciTest}"/>
	</bean>
	<bean id="connectionPool_perciTest" class="oracle.ucp.jdbc.PoolDataSourceImpl">
		<property name="connectionFactoryClassName" value="oracle.jdbc.pool.OracleDataSource"/>
		<property name="URL" value="${jdbc.driver.url_perciTest}"/>
		<property name="user" value="${jdbc.user.name_perciTest}"/>
		<property name="password" value="${jdbc.user.pass_perciTest}"/>
		<property name="initialPoolSize" value="5"/>
		<property name="minPoolSize" value="5"/>
		<property name="maxPoolSize" value="10"/>
	</bean>
-->
	<!-- oracle ucp - End -->

<!--
	<bean id="driverManager_perciProd" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${jdbc.driver.driverClassName}"/>
		<property name="url" value="${jdbc.driver.url_perciProd}"/>
		<property name="username" value="${jdbc.user.name_perciProd}"/>
		<property name="password" value="${jdbc.user.pass_perciProd}"/>
	</bean>
-->
	<bean id="connectionPool_perciProd" class="org.apache.tomcat.dbcp.dbcp2.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver.driverClassName}"/>
		<property name="url" value="${jdbc.driver.url_perciProd}"/>
		<property name="username" value="${jdbc.user.name_perciProd}"/>
		<property name="password" value="${jdbc.user.pass_perciProd}"/>
	</bean>


	<!-- Spring JDBC & MyBatis 둘 다 가능 (JdbcDaoSupport, NamedParameterJdbcDaoSupport) & Message Source Accessor -->
	<bean id="jdbcDao" abstract="true" class="${name.package.framework}.base.JdbcDao">
		<property name="dataSource" ref="${jdbc.using.dataSource}"/>
		<property name="messageSourceAccessor" ref="messageSourceAccessor"/>
		<property name="sqlSession" ref="sqlSessionTemplate"/>
	</bean>
	<bean id="namedParameterJdbcDao" abstract="true" class="${name.package.framework}.base.NamedParameterJdbcDao">
		<property name="dataSource" ref="${jdbc.using.dataSource}"/>
		<property name="messageSourceAccessor" ref="messageSourceAccessor"/>
		<property name="sqlSession" ref="sqlSessionTemplate"/>
	</bean>

	<!-- MyBatis (From MyBatis3.X Mappers replaced with SqlMapClient) -->
	<!-- mapperLocations : scan mapper files -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="${jdbc.using.dataSource}"/>
		<property name="configLocation" value="classpath:${path.mybatis.configFile}"></property>
		<property name="mapperLocations">
			<list>
				<value>classpath*:${path.mybatis.mapperDirFwk}/**/*Mapper.xml</value>
				<value>classpath*:${path.mybatis.queryDirFwk}/**/*Mapper.xml</value>
				<value>classpath*:${path.mybatis.mapperDirProject}/**/*Mapper.xml</value>
				<value>classpath*:${path.mybatis.queryDirProject}/**/*Mapper.xml</value>
			</list>
		</property>
	</bean>
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory"/>
	</bean>

	<!-- This makes Transaction to be possible in Service -->
	<bean id="baseBiz" abstract="true" class="${name.package.framework}.base.Biz">
		<property name="sqlSessionTemplate" ref="sqlSessionTemplate"/>
		<property name="sessionFactory" ref="hibernateLocalSessionFactory"/>
		<property name="messageSourceAccessor" ref="messageSourceAccessor"/>
	</bean>

	<!-- Hibernate -->
	<bean id="baseHDao" abstract="true" class="${name.package.framework}.base.HDao">
		<property name="sessionFactory" ref="hibernateLocalSessionFactory"/>
		<property name="messageSourceAccessor" ref="messageSourceAccessor"/>
	</bean>

	<!-- TransactionManager based on JDBC & MyBatis -->
	<bean id="txManagerForJdbc" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="${jdbc.using.dataSource}"/>
	</bean>
	<!-- TransactionManager based on Hibernate (sessionFactory info is in spring-nony-hibernate.xml) -->
	<bean id="txManagerForHibernate" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory" ref="hibernateLocalSessionFactory"/>
	</bean>


	<!-- Multiple Datasource Transaction -->
	<bean id="txManagerForHibernate_alpaca" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory" ref="hibernateLocalSessionFactory_alpaca"/>
	</bean>

	<bean id="txManagerForHibernate_perciTest" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory" ref="hibernateLocalSessionFactory_perciTest"/>
	</bean>

	<bean id="txManagerForHibernate_perciProd" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory" ref="hibernateLocalSessionFactory_perciProd"/>
	</bean>
</beans>