/**************************************************************************************************
 * project
 * Description - Org0202 - Organisation Profile
 *	- Generated by Source Generator
 *************************************************************************************************/
package project.app.org.org0202;

import org.springframework.beans.factory.annotation.Autowired;

import project.common.extend.BaseAction;
import project.conf.resource.ormapper.dto.oracle.HpOrganisationD;
import zebra.util.CommonUtil;

public class Org0202Action extends BaseAction {
	@Autowired
	private Org0202Biz biz;

	public String getDefault() throws Exception {
		biz.getDefault(paramEntity);
		return "list";
	}

	public String getList() throws Exception {
		try {
			biz.getList(paramEntity);
		} catch (Exception ex) {
		}
		setRequestAttribute("paramEntity", paramEntity);
		return "ajaxResponse";
	}

	public String getOrganisationDetailFrameContainer() throws Exception {
		biz.getOrganisationDetailFrameContainer(paramEntity);

		if (paramEntity.isSuccess()) {
			HpOrganisationD hpOrganisationD = (HpOrganisationD)paramEntity.getObject("hpOrganisationD");

			session.setAttribute("OrganisationIdForAdminTool", CommonUtil.toStringForId(hpOrganisationD.getOrganisationId()));
			session.setAttribute("OrganisationNameForAdminTool", hpOrganisationD.getOrganisationName());
			session.setAttribute("HpOrganisationDForAdminTool", hpOrganisationD);

			session.setAttribute("OrganisationIdQuickSearch", CommonUtil.toStringForId(hpOrganisationD.getOrganisationId()));
			session.setAttribute("OrganisationNameQuickSearch", hpOrganisationD.getOrganisationName());
			session.setAttribute("HpOrganisationDQuickSearch", hpOrganisationD);
		}
		return "organisationDetailFrameContainer";
	}

	public String getOrganisation() throws Exception {
		biz.getOrganisation(paramEntity);
		return "basicinfo";
	}

	public String getOrganisationDetail() throws Exception {
		try {
			biz.getOrganisationDetail(paramEntity);
		} catch (Exception ex) {
		}
		setRequestAttribute("paramEntity", paramEntity);
		return "ajaxResponse";
	}

	public String getCommunicationHistory() throws Exception {
		try {
			biz.getCommunicationHistory(paramEntity);
		} catch (Exception ex) {
		}
		setRequestAttribute("paramEntity", paramEntity);
		return "ajaxResponse";
	}
}